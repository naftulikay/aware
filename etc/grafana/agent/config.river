logging {
    level = "info"
    format = "logfmt"
}

// INFO this setup accepts logs, metrics, and traces via OTLP on port 4317 (gRPC) and 4318 (HTTP). all data is logged to
//      the console, and simultaneously collected into batches before sending to the final destination, which for logs is
//      Loki, for metrics is Prometheus (remote write), and for tracing is Jaeger (simple OTLP forward).

// inputs
otelcol.receiver.otlp "default" {
    grpc {}
    http {}

    output {
        logs = [
            otelcol.exporter.logging.default.input,
            otelcol.processor.batch.default.input,
        ]
        metrics = [
            otelcol.exporter.logging.default.input,
            otelcol.processor.batch.default.input,
        ]

        traces = [
            otelcol.exporter.logging.default.input,
            otelcol.processor.batch.default.input,
        ]
    }
}

loki.source.gelf "default" {
    forward_to = [loki.write.default.receiver, loki.echo.default.receiver]
    relabel_rules = loki.relabel.gelf.rules
}

loki.source.syslog "default" {
    listener {
        address = "0.0.0.0:5514"
        protocol = "tcp"
        labels = { transport = "syslog", protocol = "tcp" }
        label_structured_data = true
        use_rfc5424_message = true
        use_incoming_timestamp = true
    }

    listener {
        address = "0.0.0.0:5514"
        protocol = "udp"
        labels = { transport = "syslog", protocol = "udp" }
        label_structured_data = true
        use_rfc5424_message = true
        use_incoming_timestamp = true
    }

    forward_to = [loki.write.default.receiver, loki.echo.default.receiver]
}

// processing
otelcol.processor.batch "default" {
    output {
        metrics = [otelcol.exporter.prometheus.default.input]
        logs = [otelcol.exporter.loki.default.input]
        traces = [otelcol.exporter.otlp.jaeger.input]
    }
}

loki.relabel "gelf" {
    forward_to = [loki.write.default.receiver]
    rule {
        source_labels = ["__gelf_message_host"]
        target_label = "host"
    }
}

// outputs
otelcol.exporter.logging "default" {
    verbosity = "detailed"
    sampling_initial = 10
    sampling_thereafter = 10
}

// output: logging -> loki
otelcol.exporter.loki "default" {
    forward_to = [loki.write.default.receiver]
}

loki.write "default" {
    endpoint {
        url = "http://loki:3100/loki/api/v1/push"
    }
}

loki.echo "default" {}

// output: metrics -> prometheus
otelcol.exporter.prometheus "default" {
    forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
    endpoint {
        url = "http://prometheus:9090/api/v1/write"
    }
}

// output: traces -> otlp (jaeger)
otelcol.exporter.otlp "jaeger" {
    client {
        endpoint = "jaeger:4317"
        tls {
            insecure = true
        }
    }
}